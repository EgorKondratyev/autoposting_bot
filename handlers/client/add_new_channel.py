import random

from aiogram.types import Message, CallbackQuery
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher import FSMContext
from aiogram.utils.exceptions import NeedAdministratorRightsInTheChannel, ChatNotFound

from create_bot.bot import dp, bot
from databases.client import ChannelDB
from handlers.stop_fsm import create_keyboard_stop_fsm
from keyboards.inline.add_new_channel import confirm_add_channel_menu
from states.add_new_channel import AddNewChannelFSM
from log.create_logger import logger


# @dp.callback_query_handler(Text(equals='start_add_channel'))
async def get_id_channel(callback: CallbackQuery):
    await callback.answer()
    await callback.message.answer(f'–¢—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤ –º–µ–Ω—é "–î–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞"!\n\n'
                                  f'–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ <b>ID</b> –∫–∞–Ω–∞–ª–∞: ',
                                  reply_markup=create_keyboard_stop_fsm(), parse_mode='html')
    await AddNewChannelFSM.get_group_id.set()


# @dp.message_handler(state=AddNewChannelFSM.get_group_id)
async def check_and_confirm_register_channel(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–≤–µ—Ä—è—é—â–∏–π –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å ID –∫–∞–Ω–∞–ª–∞, –∏–º–µ—é—Ç—Å—è –ª–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â–µ–µ –ø—Ä–∞–≤–∞ —É –±–æ—Ç–∞ –≤ –¥–∞–Ω–Ω–æ–º –∫–∞–Ω–∞–ª–µ, –µ—Å–ª–∏ –û–ö, —Ç–æ
    –±–æ—Ç –ø—Ä–æ—Å–∏—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    :param message:
    :param state:
    :return:
    """
    try:

        if message.text.startswith('-100'):
            if message.text[1:].isdigit():
                chat = await bot.get_chat(chat_id=message.text)
                test_message = await bot.send_message(chat_id=message.text,
                                                      text='–°—ä–µ—à—å —ç—Ç–∏ –º—è–≥–∫–∏–µ —Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–µ –±—É–ª–æ—á–∫–∏ –¥–∞ –≤—ã–ø–µ–π —á–∞—é',
                                                      disable_notification=True)
                await test_message.delete()
                async with state.proxy() as data:
                    data['chat_id'] = message.text
                    data['chat_name'] = chat.title

                text_confirm = f'–î–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–µ–ª –≤—Å–µ —ç—Ç–∞–ø—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∏ –≥–æ—Ç–æ–≤ –∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é!\n\n' \
                               f'–û—Å—Ç–∞–ª–æ—Å—å –ª–∏—à—å <i>–∫–ª–∏–∫–Ω—É—Ç—å</i> –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª <b>{chat.title}</b>'
                await AddNewChannelFSM.confirm.set()
                await message.answer(text_confirm, reply_markup=confirm_add_channel_menu, parse_mode='html')
            else:
                await message.answer('ID –º–æ–∂–µ—Ç —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ —Ü–∏—Ñ—Ä!', reply_markup=create_keyboard_stop_fsm())
        else:
            await message.answer('‚ùå<b>–í–Ω–∏–º–∞–Ω–∏–µ!</b> –ù–∞—Ä—É—à–µ–Ω —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –≤–≤–æ–¥–∞ ID –∫–∞–Ω–∞–ª–∞‚ùå\n'
                                 'ID –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å -100. <i>–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–µ –≤–≤–æ–¥–∞ ID –∫–∞–Ω–∞–ª–∞ –≤ '
                                 '"/help"</i>\n\n'
                                 '–ï—Å–ª–∏ –∂–µ–ª–∞–µ—à—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞, —Ç–æ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–æ–º–∞–Ω–¥–æ–π '
                                 '"/stop"', reply_markup=create_keyboard_stop_fsm(), parse_mode='html')

    except NeedAdministratorRightsInTheChannel:
        await message.answer('–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã —Å–ª–µ–¥—É—é—â–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è: ',
                             reply_markup=create_keyboard_stop_fsm())
        with open('media/photo/m4LN8p01ifA.jpg', 'rb') as photo_file:
            await message.answer_photo(photo_file)
    except ChatNotFound:
        await message.answer('–ü–æ –∫–∞–∫–∏–º-—Ç–æ –ø—Ä–∏—á–∏–Ω–∞–º –¥–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–ø–∏—Å–∫–∞—Ö –±–æ—Ç–∞, —É–¥–æ—Å—Ç–æ–≤–µ—Ä—å—Å—è, —á—Ç–æ '
                             '–¥–æ–±–∞–≤–∏–ª –±–æ—Ç–∞ –≤ –Ω—É–∂–Ω—ã–π —Ç–µ–±–µ –∫–∞–Ω–∞–ª\n'
                             '–¢–∞–∫–∂–µ —Å—Ç–æ–∏—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ —Ç–æ, –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ —Ç—ã –≤–≤—ë–ª ID –¥–∞–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –∏ —Å–æ–≤–ø–∞–¥–∞–µ—Ç –ª–∏ –æ–Ω '
                             '—Å —Ç–µ–º ID, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –ø–æ–ª—É—á–∏–ª –æ—Ç –±–æ—Ç–∞ @getmyid_bot',
                             reply_markup=create_keyboard_stop_fsm())
    except Exception as ex:
        await message.answer('–ü–æ –∫–∞–∫–∏–º-—Ç–æ –ø—Ä–∏—á–∏–Ω–∞–º –¥–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–ø–∏—Å–∫–∞—Ö –±–æ—Ç–∞, —É–¥–æ—Å—Ç–æ–≤–µ—Ä—å—Å—è, —á—Ç–æ '
                             '–¥–æ–±–∞–≤–∏–ª –±–æ—Ç–∞ –≤ –Ω—É–∂–Ω—ã–π —Ç–µ–±–µ –∫–∞–Ω–∞–ª\n'
                             '–¢–∞–∫–∂–µ —Å—Ç–æ–∏—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ —Ç–æ, –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ —Ç—ã –≤–≤—ë–ª ID –¥–∞–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –∏ —Å–æ–≤–ø–∞–¥–∞–µ—Ç –ª–∏ –æ–Ω '
                             '—Å —Ç–µ–º ID, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –ø–æ–ª—É—á–∏–ª –æ—Ç –±–æ—Ç–∞ @getmyid_bot',
                             reply_markup=create_keyboard_stop_fsm())
        if hasattr(ex, 'message'):
            logger.warning(f'–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ check_and_confirm_register_channel —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '
                           f'{message.from_user.id}\n\n'
                           f'{ex.message}')
        else:
            logger.warning(f'–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ check_and_confirm_register_channel —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '
                           f'{message.from_user.id}\n\n'
                           f'{ex}')


# @dp.callback_query_handler(Text(startswith='add_channel_'))
async def add_new_channel(callback: CallbackQuery, state: FSMContext):
    data = callback.data[len('add_channel_'):]
    if data == 'confirm':
        await callback.answer('–ù–∞—á–∏–Ω–∞—é –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...')

        async with state.proxy() as data:
            chat_id = data['chat_id']
            chat_name = data['chat_name']
        await state.finish()

        channel_db = ChannelDB()
        if not channel_db.exists_user(user_id=callback.from_user.id, channel_id=chat_id):
            job = ['–ü—Ä–∏—è—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã...‚òï', '–ö–æ–º—Ñ–æ—Ä—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã...üç©', '–£—Å–ø–µ—à–Ω–æ–π —Ä–∞–±–æ—Ç—ã!üí∏']
            channel_db.add_user(user_id=callback.from_user.id, channel_id=chat_id, channel_name=chat_name)
            await callback.message.answer(f'–ö–∞–Ω–∞–ª –±—ã–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!\n\n'
                                          f'{random.choice(job)}')
        else:
            await callback.message.answer('–î–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –Ω–∞ —Ç–≤–æ–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ!')
    else:
        await state.finish()
        await callback.answer()
        await callback.message.answer('–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')


def register_handlers_add_new_channel():
    dp.register_callback_query_handler(get_id_channel, Text(equals='start_add_channel'))
    dp.register_message_handler(check_and_confirm_register_channel, state=AddNewChannelFSM.get_group_id)
    dp.register_callback_query_handler(add_new_channel, Text(startswith='add_channel_'), state=AddNewChannelFSM.confirm)
